program ProdConsOK;

const MAXDATOS = 10;

type tbuffer = record
	datos: array[1..MAXDATOS] of integer;
	posInser,posSacar:Integer;
	nProductos,nHuecos,em:semaphore;
end;

procedure inicializar(var buffer:tBuffer);
begin
	buffer.posInser := 1;
	buffer.posSacar := 1;
	initial(buffer.nProductos,0);
	initial(buffer.nHuecos,MAXDATOS);
	initial(buffer.em,1);
end;

procedure insertar(dato:integer; var buffer:tBuffer);
begin
	wait(buffer.nHuecos);
	wait(buffer.em);
	buffer.datos[buffer.posInser]:= dato;
	buffer.posInser := buffer.posInser MOD MAXDATOS + 1;
	signal(buffer.em);
	signal(buffer.nProductos);
end;

procedure sacar(var dato:integer; var buffer:tBuffer);
begin
	wait(buffer.nProductos);
	wait(buffer.em);
	dato := buffer.datos[buffer.posSacar];
	buffer.posSacar := buffer.posSacar MOD MAXDATOS + 1;
	signal(buffer.em);
	signal(buffer.nHuecos);
end;
process type tProductor(var buffer:tBuffer);
var
	dato: integer;
begin
	repeat
		dato:= random(200);
		insertar(dato,buffer);
	forever
end;

process type tConsumidor(var buffer:tBuffer);
var
	dato: integer;
begin
	repeat
		sacar(dato,buffer);
		write(dato);
		write('-')
	forever
end;

var
	buffer:tBuffer;
	i:integer;
	prod:array[1..5] of tProductor;
	cons:array [1..5] of tConsumidor;
begin
	inicializar (buffer);
	cobegin
	for i:=1 to 5 do
		prod[i](buffer);
		
	for i:=1 to 3 do
		cons[i](buffer);
		
	coend;
end.
















procedure entraRojo(id: integer);
	begin
		wait(pantalla);
		writeln('Coche Rojo ',id,' entra');
		{signal(pantalla);}
	end;
 
procedure saleRojo(id: integer);
	begin
		wait(pantalla);
		writeln('Coche Rojo ',id,' sale');
		{signal(pantalla);}
	end;
 
 {Simétrico para los coches Azules}

procedure entraAzul(id: integer);
	begin
		wait(pantalla);
		writeln('                    ','Coche Azul ',id,' entra');
		{signal(pantalla);}
	end;

procedure saleAzul(id: integer);
	begin
		{wait(pantalla);}
		writeln('                    ','Coche Azul ',id,' sale');
		signal(pantalla);
	end;}
